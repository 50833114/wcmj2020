var tipuesearch = {"pages": [{'title': '關於 About', 'text': '這是50833114網際內容管理課程的網頁 \n 50833114FB連結( 點我 ) \n', 'tags': '', 'url': '關於 About.html'}, {'title': '網管筆記', 'text': '', 'tags': '', 'url': '網管筆記.html'}, {'title': 'W2', 'text': '建網站 \n 此內容管理系統以\xa0 https:..github.com.mdecourse.cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n \n 在 github 建立倉儲, git clone 到近端 \n 參考 https:..github.com.mdecourse.newcms , 加入除了 cmsimde 目錄外的所有內容 \n \n 以 git submodule add\xa0 https:..github.com.mdecourse.cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n \n 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n \n git clone --recurse-submodules\xa0 https:..github.com.mdecourse.newcms.git \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '筆記 \n terminology 專業術語、particular 特別、technical 技術、application 應用、 \n software 軟體、hardware 硬體、firmwarre 韌體、machine language 機器語言、 \n URL:Uniform Resourse Locator\xa0 統一資源定位、command wundow 命令視窗、submodule 子模組 \n 程式令: \n Y:←指y槽 Y:\\\xa0 \xa0←表示Y槽的root根目錄 > 為回應符號(prormptsign)\xa0 \\ 為blackslash 反斜線 dir為顯示目錄內容的指令 cd tmp 表示change directory 到指定的目錄 git為分散式版次管理的指令名稱 git clone表示要使用git對遠端的倉儲進行clone。 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': 'portable 可攜、Assembly 執行機器速度快但對硬體的相容性差、objective -c \n →開發iphone的前一代程式、compile 編譯、interpret 解譯、unix電腦系統的一種、shell 殼、graphics 圖形、device 物件、interface 介面 \n ps.c++ →加入物件功能的C \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '掃墓放假 \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '大致講解↓的用法和規格 \n portable obs\xa0→直播軟體 \n meet.google.com →google 的視訊軟體 \n \xa0 \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': 'abunta→遠端操控電腦、asscii 美國標準交換資訊碼。\xa0 \n tmp>wcmj2020>init.py\xa0 \xa0更改網頁標題 \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '網站push的步驟 \n 1.先把網站切成靜態Home \n 2.git add空格.\xa0 \xa0→意思是跟電腦說現在要讀的東西 \n 3.git comit -m"add w□" →跟電腦說你要讀的東西是什麼 \n 4.git push →推上動態網頁 \n 讓我們實作一次分組，弄 meet.google.com 的實際操作。好讓下次上課可以線上上課。 \n \xa0 \n School IPV6 : [2001:288:6004:17::53]:3128(42.17.7.4) \n Port : 140.130.17.53:3128 \n inter-net == inter - national \n (inter network) \n protocol 協定 \n tcp/ip == transmision control protocol / internet protocol \n transmit 傳輸 \n edition 版本(瞬時) \n Version 版本(較大的修改) \n router 路由器 \n route 路徑 \n remote login 遠端登入 \n client <-> server \n \xa0 \xa0 \xa0 \xa0 \xa0 www \n browser <-> www server \n HTTP \n sttp client <-> sttp server \n 中華電信 DNS Server \n 2001:b000:168::1 \n Type of computer \n 1.Super computer \n 2.Mainframe \n 3.Server \n 4.Personal Computer \n 5.Microcontroler \n 6.Mobile phone \n tele 遠 \n macro 巨大 (比原子atom大) \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '電腦硬體架構 \n 主機螢幕周邊 \n 主機: \n 主機板 MB \n 處理器 CPU \n 記憶體 RAM \n 顯示卡 GPU \n 電源供應器 PSU \n 硬碟 HDD,SSD \n 電腦的種類 \n Types Of Computer \n Super Computer 超級電腦 \n MainFrame 伺服器主機 \n Server 伺服器 \n PC 個人電腦 \n Microcontroler 微控制器 \n Mobile Phone 智慧型手機 \n', 'tags': '', 'url': 'W9.html'}, {'title': 'w10', 'text': '以 SSH 維護倉儲 \n 由於在電腦教室時採用純 IPv6 協定上網, 因此為了能夠在近端將倉儲改版資料推送到目前只接受 IPv4 協定連線的 github, 以下除了將原本以 https 對 github 連線, 改為以 ssh 協定連線外, 在 Windows 環境下必須利用 putty 與 plink, 設定 putty 格式的 .ppk 以及能夠同時支援 IPv4 與 IPv6 的代理主機. \n 設定步驟如下: \n 1. 下載 Putty 工具組 \n 從\xa0 https://www.chiark.greenend.org.uk/~sgtatham/putty/ \xa0 下載一般版, 或從 \xa0 http://jakub.kotrla.net/putty/ \xa0 下載特殊的可攜版本. \n 2. 利用 y:\\portablegit\\bin\\sh.exe 進入 shell 命令環境後, 以\xa0 \n \n \n \n \n \n \n 1 \n \n \n \n ssh-keygen -t rsa -b 4096 -C  "使用者學號" \n \n \n \n \n \n \n \n 在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key \n 之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -> SSH and GPG keys 頁面下. \n 3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定. \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n 修改啟動的 start.bat 加入下列設定: \n \xa0 \n set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n set GIT_SSH=%Disk%:\\putty\\plink.exe \n \n \n \n \n \n \n \n 4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa. \n 開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection->SSH->Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位.\xa0 \n 並在 Connection->Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128. \n 5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n \n \n \n # no proxy at home \n #ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p \n # set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup \n ProxyCommand y:/putty/plink.exe github.com %h %p \n \xa0 \xa0 \n Host github.com \n \xa0\xa0\xa0\xa0 User git \n \xa0\xa0\xa0\xa0 Port 22 \n \xa0\xa0\xa0\xa0 Hostname github.com \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 # for connect.exe need openssh key format \n \xa0\xa0\xa0\xa0 #IdentityFile "y:\\home\\.ssh\\id_rsa_mdecourse" \n \xa0\xa0\xa0\xa0 # for plink.exe need rsa key format but set under putty github.com session \n \xa0\xa0\xa0\xa0 # plink.exe do not need the following setting \n \xa0\xa0\xa0\xa0 #IdentityFile "y:\\home\\.ssh\\mdecourse_putty_private.ppk" \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 TCPKeepAlive yes \n \xa0\xa0\xa0\xa0 IdentitiesOnly yes \n \n \n \n \n \n \n \n 6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n \n \n \n [core] \n \xa0\xa0\xa0\xa0 repositoryformatversion = 0 \n \xa0\xa0\xa0\xa0 filemode =  false \n \xa0\xa0\xa0\xa0 bare =  false \n \xa0\xa0\xa0\xa0 logallrefupdates =  true \n \xa0\xa0\xa0\xa0 symlinks =  false \n \xa0\xa0\xa0\xa0 ignorecase =  true \n [submodule] \n \xa0\xa0\xa0\xa0 active = . \n [remote  "origin" ] \n \xa0\xa0\xa0\xa0 #url = https://github.com/mdecourse/wcmj2020.git \n \xa0\xa0\xa0\xa0 url = git@github.com:mdecourse/wcmj2020.git \n \xa0\xa0\xa0\xa0 fetch = +refs/heads/*:refs/remotes/origin/* \n [branch  "master" ] \n \xa0\xa0\xa0\xa0 remote = origin \n \xa0\xa0\xa0\xa0 merge = refs/heads/master \n [submodule  "cmsimde" ] \n \xa0\xa0\xa0\xa0 url = https: //github.com/mdecourse/cmsimde.git \n \n \n \n \n \n \n \n 之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push. \n \n \n \n', 'tags': '', 'url': 'w10.html'}, {'title': '佛經', 'text': '好經專區，多聽多訟有益身心靈健康 \n \n', 'tags': '', 'url': '佛經.html'}, {'title': '心經', 'text': '觀自在菩薩，行深般若波羅蜜多時，照見五蘊皆空，度一切苦厄。舍利子，色不異空，空不異色，色即是空，空即是色，受想行識，亦復如是。舍利子，是諸法空相，不生不滅，不垢不淨，不增不減，是故空中無色，無受想行識，無眼耳鼻舌身意，無色聲香味觸法，無眼界乃至無意識界，無無明亦無無明盡，乃至無老死亦無老死盡。無苦集滅道，無智亦無得，以無所得故，菩提薩埵，依般若波羅蜜多故，心無罣礙，無罣礙故，無有恐怖，遠離顛倒夢想，究竟涅槃。三世諸佛依般若波羅蜜多故，得阿耨多羅三藐三菩提，故知般若波羅蜜多，是大神咒，是大明咒，是無上咒，是無等等咒，能除一切苦，真實不虛。故說般若波羅蜜多咒，即說咒曰：揭諦，揭諦，波羅揭諦，波羅僧揭諦，菩提薩婆訶。 \n \n', 'tags': '', 'url': '心經.html'}, {'title': '兒歌好多首', 'text': '很多有意智力發展的好歌 \n', 'tags': '', 'url': '兒歌好多首.html'}, {'title': '小星星', 'text': '一閃一閃亮晶晶\u3000滿天都是小星星 掛在天上放光明\u3000好像許多小眼睛 一閃一閃亮晶晶\u3000滿天都是小星星 \n \n', 'tags': '', 'url': '小星星.html'}, {'title': '小蜜蜂', 'text': '嗡嗡嗡，嗡嗡嗡 大家一起勤做工 來匆匆，去匆匆 做工興味濃 天暖花好不做工 將來哪裏好過冬 嗡嗡嗡，嗡嗡嗡 別學懶惰蟲 嗡嗡嗡，嗡嗡嗡 大家一起勤做工 來匆匆，去匆匆 做工興味濃 天暖花好不做工 將來哪裏好過冬 嗡嗡嗡，嗡嗡嗡 別學懶惰蟲 嗡嗡嗡，嗡嗡嗡 大家一起勤做工 來匆匆，去匆匆 做工興味濃 天暖花好不做工 將來哪裏好過冬 嗡嗡嗡，嗡嗡嗡 別學懶惰蟲 嗡嗡嗡，嗡嗡嗡 大家一起勤做工 來匆匆，去匆匆 做工興味濃 天暖花好不做工 將來哪裏好過冬 嗡嗡嗡，嗡嗡嗡 別學懶惰蟲 \n', 'tags': '', 'url': '小蜜蜂.html'}]};